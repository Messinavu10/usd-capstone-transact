<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" status="width=device-width, initial-scale=1.0" />

    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
      integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/style.css" />
    <title>Verifier</title>
  </head>

  <body>
    <%- include('includes/navbar', {isAuthenticated: isAuthenticated,
    configured, list}); %> <%- include('includes/footer'); %>

    <div
      class="d-flex flex-column flex-md-row p-4 gap-4 py-md-4 align-items-center justify-content-center"
    >
      <div class="list-group">
        <% list.forEach((creds)=>{%>
          <% const url = `/verifierqr?credType=${creds.id}` %> 
        <a
          href="<% __append(url)%>"
          class="list-group-item list-group-item-action d-flex gap-3 py-3"
          aria-current="true"
        >
          <img
            src="<% __append(creds.image)%>"
            style="background-color: <% __append(creds.backgroundColor) %>"
            alt="<% __append(creds.imagealt)%>"
            width="64"
            height="64"
            class="rounded"
          />
          <div class="d-flex gap-2 w-100 justify-content-between">
            <div>
              <h6 class="mb-0"><% __append(creds.name)%></h6>
              <p class="mb-0 opacity-75"><% __append(creds.description)%></p>
            </div>
            <small class="opacity-50"><% __append(creds.issuer)%></small>
          </div>
        </a>
        <%});%>
      </div>
    </div>
    <div class="row" style="margin: auto">
      <div id="card-div" class="col-md-3">
        <div class="card text-center">
          <div class="card-body">
            <div id="qrcode" style="text-align: center"></div>
          </div>
        </div>
      </div>
    </div>
    <script
      src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
      integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
      integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"
      integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
      crossorigin="anonymous"
    ></script>
    <script src="qrcode.min.js"></script>
    <script>
      //   var signIn = document.getElementById("sign-in");
      //   var signOut = document.getElementById("sign-out");
      //   var display = document.getElementById("display");
      var qrcode = new QRCode("qrcode", { width: 300, height: 300 });
      // for now use a dummy url for testing
      qrcode.makeCode("https://www.transactcampus.com");
      document.getElementById("qrcode");

      document.getElementById("qrText").style.display = "none";
      document.getElementById("message").innerHTML = respMsg.message;

      //   var respPresentationReq = null;
      //   signIn.addEventListener("click", () => {
      //     fetch("/api/verifier/presentation-request")
      //       .then(function (response) {
      //         response
      //           .text()
      //           .catch(
      //             (error) =>
      //               (document.getElementById("message").innerHTML = error)
      //           )
      //           .then(function (message) {
      //             respPresentationReq = JSON.parse(message);
      //             if (/Android/i.test(navigator.userAgent)) {
      //               console.log(
      //                 `Android device! Using deep link (${respPresentationReq.url}).`
      //               );
      //               window.location.href = respPresentationReq.url;
      //               setTimeout(function () {
      //                 window.location.href =
      //                   "https://play.google.com/store/apps/details?id=com.azure.authenticator";
      //               }, 2000);
      //             } else if (/iPhone/i.test(navigator.userAgent)) {
      //               console.log(
      //                 `iOS device! Using deep link (${respPresentationReq.url}).`
      //               );
      //               window.location.replace(respPresentationReq.url);
      //             } else {
      //               console.log(
      //                 `Not Android or IOS. Generating QR code encoded with ${message}`
      //               );
      //               //   qrcode.makeCode(respPresentationReq.url);

      //               document.getElementById("sign-in").style.visibility =
      //                 "hidden";
      //               document.getElementById("qrText").style.display = "block";
      //             }
      //           })
      //           .catch((error) => {
      //             console.log(error.message);
      //           });
      //       })
      //       .catch((error) => {
      //         console.log(error.message);
      //       });
      //     var checkStatus = setInterval(function () {
      //       fetch(
      //         "api/verifier/presentation-response?id=" + respPresentationReq.id
      //       )
      //         .then((response) => response.text())
      //         .catch(
      //           (error) => (document.getElementById("message").innerHTML = error)
      //         )
      //         .then((response) => {
      //           if (response.length > 0) {
      //             console.log(response);
      //             respMsg = JSON.parse(response);
      //             // QR Code scanned
      //             if (respMsg.status == "request_retrieved") {
      //               document.getElementById("message-wrapper").style.display =
      //                 "block";
      //               document
      //                 .getElementById("qrcode")
      //                 .getElementsByTagName("img")[0].style.opacity = "0.1";
      //               document.getElementById("qrText").style.display = "none";
      //               document.getElementById("message").innerHTML =
      //                 respMsg.message;
      //             }

      //             if (respMsg.status == "presentation_verified") {
      //               document.getElementById("qrcode").style.display = "none";
      //               document.getElementById("message").innerHTML =
      //                 respMsg.message;
      //               document.getElementById("payload").innerHTML =
      //                 "Payload: " + JSON.stringify(respMsg.payload);
      //               document.getElementById("subject").innerHTML =
      //                 respMsg.firstName +
      //                 " " +
      //                 respMsg.lastName +
      //                 " is a Verifiable Credential Expert";
      //               clearInterval(checkStatus);
      //             }
      //             if (respMsg.status == "issuance_failed") {
      //               document.getElementById("qrcode").style.display = "none";
      //               document.getElementById("message").innerHTML =
      //                 "Verification error occurred.";
      //               document.getElementById("payload").innerHTML =
      //                 "Payload: " + respMsg.payload;
      //               clearInterval(checkStatus);
      //             }
      //           }
      //         });
      //     }, 1500); //change this to higher interval if you use ngrok to prevent overloading the free tier service
      //   });
    </script>
  </body>
</html>
